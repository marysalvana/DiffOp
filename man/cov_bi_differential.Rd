% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cov_auxilliary.R
\name{cov_bi_differential}
\alias{cov_bi_differential}
\title{Compute the bivariate differential operator cross-covariance function}
\usage{
cov_bi_differential(location, beta, scale_horizontal, scale_vertical,
a1, b1, c1, d1, a2, b2, c2, d2, radius_of_sphere, splines_degree,
inner_knots1, inner_knots2)
}
\arguments{
\item{location}{An \eqn{n \times 3} matrix of coordinates.}

\item{beta}{A numeric constant indicating the colocated correlation parameter.}

\item{scale_horizontal}{A numeric constant indicating the horizontal scale parameter.}

\item{scale_vertical}{A numeric constant indicating the vertical scale parameter.}

\item{a1}{A numeric constant indicating the anisotropy in latitude parameter associated with variable 1.}

\item{b1}{A numeric constant indicating the anisotropy in longitude parameter associated with variable 1.}

\item{c1}{A numeric vector indicating the nonstationary parameters with depth associated with variable 1.}

\item{d1}{A numeric constant indicating the variance parameter from the fully isotropic component associated with variable 1.}

\item{a2}{A numeric constant indicating the anisotropy in latitude parameter associated with variable 2.}

\item{b2}{A numeric constant indicating the anisotropy in longitude parameter associated with variable 2.}

\item{c2}{A numeric vector indicating the nonstationary parameters with depth associated with variable 2.
if splines_degree > 0, this is A numeric vector indicating the splines coefficients for the
nonstationary with depth parameter c1 associated with variable 1.}

\item{d2}{A numeric constant indicating the variance parameter from the fully isotropic component associated with variable 2.}

\item{inner_knots1}{A vector of knot locations for variable 1 when using splines to
characterize c1.}

\item{inner_knots2}{A vector of knot locations for variable 2 when using splines to
characterize c2.}

\item{radius_of_sphere}{A numeric constant indicating the radius of the sphere.}

\item{splines_degree}{A number indicating the degree of the splines when
using splines to characterize the nonstationary parameters c1 and c2.}
}
\value{
A matrix of dimension \eqn{2 n \times 2 n}.
}
\description{
\code{cov_bi_differential} evaluates the nonstationary spatial cross-covariance
function model based on the differential operators approach in 3D of the form:
\deqn{C_{ij}(L_1, L_2, l_1 - l_2, p_1, p_2) = K_{ij}^{1} \mathcal{M}_{\nu_{ij} - 1} \{ {h(L_1, L_2, l_1 - l_2, p_1 - p_2)}^{1/2} \}}
\deqn{\quad \quad \quad \quad \quad \quad + K_{ij}^{2} \mathcal{M}_{\nu_{ij}} \{ {h(L_1, L_2, l_1 - l_2, p_1 - p_2)}^{1/2} \},}
for different pairs of locations \eqn{(L_1, l_1, p_1)} and \eqn{(L_2, l_2, p_2)},
where \eqn{L} represents the latitude, \eqn{l} the longitude, and \eqn{p} the pressure coordinates, respectively.
The forms of \eqn{K_{ij}^{1}} and \eqn{K_{ij}^{2}} can be found in Appendix of Salvana, M. L., & Jun, M. (2022)
and \eqn{h(L_1, L_2, l_1 - l_2, p_1 - p_2)} is a distance function of the form:
\deqn{h(L_1, L_2, l_1 - l_2, p_1 - p_2) = {a_{h}^2 ch^2(L_1, L_2, l_1 - l_2) + a_{v}^2 (p_1 - p_2)^2},}
where \eqn{a_{h}} and \eqn{a_{v}} are the scale parameters in the horizontal and vertical directions,
respectively, and \eqn{ch(L_1, L_2, l_1 - l_2)} is the chordal distance with the following formula:
\deqn{ch(L_1, L_2, l_1 - l_2) = 2 R \left\{ \sin^2 \left( \frac{L_1 - L_2}{2} \right) + \cos L_1 \cos L_2 \sin^2 \left( \frac{l_1 - l_2}{2} \right) \right\}^{1/2}.}
Here \eqn{R} is the radius of the sphere. Note that for global processes,
the relevant sphere is the Earth with \eqn{R=6,371} km.
}
\examples{

library(dplyr)

x <- seq(0, 1, length.out = 10)
y <- seq(0, 1, length.out = 10)

loc2d <- expand.grid(x, y) \%>\% as.matrix()
depth <- seq(0, 1, length.out = 10)
loc3d <- cbind(rep(loc2d[, 1], each = length(depth)), rep(loc2d[, 2], each = length(depth)), depth)

earthRadiusKm = 6371

BETA = 0.5
SCALE_HORIZONTAL = 0.03
SCALE_VERTICAL = 0.3
A1 = A2 = 0.00001
B1 = B2 = 0.00001
C1 = sin((loc3d[, 3] + 0.1) * pi / 0.5)
C2 = cos((loc3d[, 3] + 0.1) * pi / 0.5)
D1 = D2 = 0

cov_mat <- cov_bi_differential(location = loc3d, beta = BETA,
                               scale_horizontal = SCALE_HORIZONTAL,
                               scale_vertical = SCALE_VERTICAL,
                               a1 = A1, b1 = B1, c1 = C1, d1 = D1,
                               a2 = A2, b2 = B2, c2 = C2, d2 = D2,
                               radius_of_sphere = earthRadiusKm)


}
\references{
Salvana, M. L., & Jun, M. (2022). 3D Bivariate Spatial Modelling of Argo Ocean Temperature and Salinity Profiles. \emph{arXiv preprint arXiv:2210.11611}.
}
\author{
Mary Lai Salvana \email{yourlainess@gmail.com}
}
